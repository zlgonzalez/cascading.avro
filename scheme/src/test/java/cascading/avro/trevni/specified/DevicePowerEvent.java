/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package cascading.avro.trevni.specified;

@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class DevicePowerEvent extends org.apache.avro.specific.SpecificRecordBase
        implements org.apache.avro.specific.SpecificRecord {
    public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse(
            "{\"type\":\"record\",\"name\":\"DevicePowerEvent\",\"namespace\":\"cascading.avro.trevni.specified\",\"fields\":[{\"name\":\"power\",\"type\":\"double\"}]}");

    public static org.apache.avro.Schema getClassSchema() {
        return SCHEMA$;
    }

    @Deprecated
    public double power;

    /**
     * Default constructor.
     */
    public DevicePowerEvent() {
    }

    /**
     * All-args constructor.
     */
    public DevicePowerEvent(java.lang.Double power) {
        this.power = power;
    }

    public org.apache.avro.Schema getSchema() {
        return SCHEMA$;
    }

    // Used by DatumWriter. Applications should not call.
    public java.lang.Object get(int field$) {
        switch (field$) {
        case 0:
            return power;
        default:
            throw new org.apache.avro.AvroRuntimeException("Bad index");
        }
    }

    // Used by DatumReader. Applications should not call.
    @SuppressWarnings(value = "unchecked")
    public void put(int field$, java.lang.Object value$) {
        switch (field$) {
        case 0:
            power = (java.lang.Double) value$;
            break;
        default:
            throw new org.apache.avro.AvroRuntimeException("Bad index");
        }
    }

    /**
     * Gets the value of the 'power' field.
     */
    public java.lang.Double getPower() {
        return power;
    }

    /**
     * Sets the value of the 'power' field.
     * 
     * @param value
     *            the value to set.
     */
    public void setPower(java.lang.Double value) {
        this.power = value;
    }

    /** Creates a new DevicePowerEvent RecordBuilder */
    public static cascading.avro.trevni.specified.DevicePowerEvent.Builder newBuilder() {
        return new cascading.avro.trevni.specified.DevicePowerEvent.Builder();
    }

    /**
     * Creates a new DevicePowerEvent RecordBuilder by copying an existing
     * Builder
     */
    public static cascading.avro.trevni.specified.DevicePowerEvent.Builder newBuilder(
            cascading.avro.trevni.specified.DevicePowerEvent.Builder other) {
        return new cascading.avro.trevni.specified.DevicePowerEvent.Builder(other);
    }

    /**
     * Creates a new DevicePowerEvent RecordBuilder by copying an existing
     * DevicePowerEvent instance
     */
    public static cascading.avro.trevni.specified.DevicePowerEvent.Builder newBuilder(
            cascading.avro.trevni.specified.DevicePowerEvent other) {
        return new cascading.avro.trevni.specified.DevicePowerEvent.Builder(other);
    }

    /**
     * RecordBuilder for DevicePowerEvent instances.
     */
    public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<DevicePowerEvent>
            implements org.apache.avro.data.RecordBuilder<DevicePowerEvent> {

        private double power;

        /** Creates a new Builder */
        private Builder() {
            super(cascading.avro.trevni.specified.DevicePowerEvent.SCHEMA$);
        }

        /** Creates a Builder by copying an existing Builder */
        private Builder(cascading.avro.trevni.specified.DevicePowerEvent.Builder other) {
            super(other);
        }

        /**
         * Creates a Builder by copying an existing DevicePowerEvent instance
         */
        private Builder(cascading.avro.trevni.specified.DevicePowerEvent other) {
            super(cascading.avro.trevni.specified.DevicePowerEvent.SCHEMA$);
            if (isValidValue(fields()[0], other.power)) {
                this.power = data().deepCopy(fields()[0].schema(), other.power);
                fieldSetFlags()[0] = true;
            }
        }

        /** Gets the value of the 'power' field */
        public java.lang.Double getPower() {
            return power;
        }

        /** Sets the value of the 'power' field */
        public cascading.avro.trevni.specified.DevicePowerEvent.Builder setPower(double value) {
            validate(fields()[0], value);
            this.power = value;
            fieldSetFlags()[0] = true;
            return this;
        }

        /** Checks whether the 'power' field has been set */
        public boolean hasPower() {
            return fieldSetFlags()[0];
        }

        /** Clears the value of the 'power' field */
        public cascading.avro.trevni.specified.DevicePowerEvent.Builder clearPower() {
            fieldSetFlags()[0] = false;
            return this;
        }

        @Override
        public DevicePowerEvent build() {
            try {
                DevicePowerEvent record = new DevicePowerEvent();
                record.power = fieldSetFlags()[0] ? this.power : (java.lang.Double) defaultValue(fields()[0]);
                return record;
            } catch (Exception e) {
                throw new org.apache.avro.AvroRuntimeException(e);
            }
        }
    }
}
